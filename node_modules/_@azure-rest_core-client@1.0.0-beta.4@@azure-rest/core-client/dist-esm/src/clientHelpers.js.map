{"version":3,"file":"clientHelpers.js","sourceRoot":"","sources":["../../src/clientHelpers.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAElC,OAAO,EACL,yBAAyB,EACzB,+BAA+B,EAE/B,uBAAuB,GAExB,MAAM,2BAA2B,CAAC;AACnC,OAAO,EAAkC,iBAAiB,EAAE,MAAM,kBAAkB,CAAC;AAErF,OAAO,EAAE,iCAAiC,EAAE,MAAM,qCAAqC,CAAC;AAExF,IAAI,gBAAwC,CAAC;AAE7C;;GAEG;AACH,MAAM,UAAU,qBAAqB,CACnC,OAAe,EACf,UAA4C,EAC5C,UAAyB,EAAE;;IAE3B,MAAM,QAAQ,GAAG,yBAAyB,CAAC,OAAO,CAAC,CAAC;IACpD,QAAQ,CAAC,YAAY,CAAC,EAAE,IAAI,EAAE,wBAAwB,EAAE,CAAC,CAAC;IAE1D,IAAI,UAAU,EAAE;QACd,IAAI,iBAAiB,CAAC,UAAU,CAAC,EAAE;YACjC,MAAM,WAAW,GAAG,+BAA+B,CAAC;gBAClD,UAAU;gBACV,MAAM,EAAE,MAAA,MAAA,OAAO,CAAC,WAAW,0CAAE,MAAM,mCAAI,GAAG,OAAO,WAAW;aAC7D,CAAC,CAAC;YACH,QAAQ,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;SACjC;aAAM,IAAI,eAAe,CAAC,UAAU,CAAC,EAAE;YACtC,IAAI,CAAC,CAAA,MAAA,OAAO,CAAC,WAAW,0CAAE,gBAAgB,CAAA,EAAE;gBAC1C,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;aAChD;YACD,MAAM,SAAS,GAAG,iCAAiC,CACjD,UAAU,EACV,MAAA,OAAO,CAAC,WAAW,0CAAE,gBAAgB,CACtC,CAAC;YACF,QAAQ,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;SAC/B;KACF;IAED,OAAO,QAAQ,CAAC;AAClB,CAAC;AAED,SAAS,eAAe,CAAC,UAAe;IACtC,OAAQ,UAA4B,CAAC,GAAG,KAAK,SAAS,CAAC;AACzD,CAAC;AAED,MAAM,UAAU,2BAA2B;IACzC,IAAI,CAAC,gBAAgB,EAAE;QACrB,gBAAgB,GAAG,uBAAuB,EAAE,CAAC;KAC9C;IAED,OAAO,gBAAgB,CAAC;AAC1B,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  createPipelineFromOptions,\n  bearerTokenAuthenticationPolicy,\n  Pipeline,\n  createDefaultHttpClient,\n  HttpClient,\n} from \"@azure/core-rest-pipeline\";\nimport { TokenCredential, KeyCredential, isTokenCredential } from \"@azure/core-auth\";\nimport { ClientOptions } from \"./common\";\nimport { keyCredentialAuthenticationPolicy } from \"./keyCredentialAuthenticationPolicy\";\n\nlet cachedHttpClient: HttpClient | undefined;\n\n/**\n * Creates a default rest pipeline to re-use accross Rest Level Clients\n */\nexport function createDefaultPipeline(\n  baseUrl: string,\n  credential?: TokenCredential | KeyCredential,\n  options: ClientOptions = {}\n): Pipeline {\n  const pipeline = createPipelineFromOptions(options);\n  pipeline.removePolicy({ name: \"exponentialRetryPolicy\" });\n\n  if (credential) {\n    if (isTokenCredential(credential)) {\n      const tokenPolicy = bearerTokenAuthenticationPolicy({\n        credential,\n        scopes: options.credentials?.scopes ?? `${baseUrl}/.default`,\n      });\n      pipeline.addPolicy(tokenPolicy);\n    } else if (isKeyCredential(credential)) {\n      if (!options.credentials?.apiKeyHeaderName) {\n        throw new Error(`Missing API Key Header Name`);\n      }\n      const keyPolicy = keyCredentialAuthenticationPolicy(\n        credential,\n        options.credentials?.apiKeyHeaderName\n      );\n      pipeline.addPolicy(keyPolicy);\n    }\n  }\n\n  return pipeline;\n}\n\nfunction isKeyCredential(credential: any): credential is KeyCredential {\n  return (credential as KeyCredential).key !== undefined;\n}\n\nexport function getCachedDefaultHttpsClient(): HttpClient {\n  if (!cachedHttpClient) {\n    cachedHttpClient = createDefaultHttpClient();\n  }\n\n  return cachedHttpClient;\n}\n"]}