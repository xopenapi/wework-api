{"version":3,"file":"pathClientTypes.js","sourceRoot":"","sources":["../../src/pathClientTypes.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { RawHttpHeaders } from \"@azure/core-rest-pipeline\";\n\n/**\n * Shape of the default request parameters, this may be overriden by the specific\n * request types to provide strong types\n */\nexport type RequestParameters = {\n  /**\n   * Headers to send along with the request\n   */\n  headers?: RawHttpHeaders;\n  /**\n   * Sets the accept header to send to the service\n   * defaults to 'application/json'\n   */\n  accept?: string;\n  /**\n   * Body to send with the request\n   */\n  body?: unknown;\n  /**\n   * Query parameters to send with the request\n   */\n  queryParameters?: Record<string, unknown>;\n  /**\n   * Set an explicit content-type to send with the request\n   */\n  contentType?: string;\n  /** Set to true if the request is sent over HTTP instead of HTTPS */\n  allowInsecureConnection?: boolean;\n};\n\n/**\n * Helper type used to detect parameters in a path template\n * keys surounded by \\{\\} will be considered a path parameter\n */\nexport type RouteParams<TRoute extends string> = TRoute extends `{${infer _Param}}/${infer Tail}`\n  ? [pathParam: string, ...pathParams: RouteParams<Tail>]\n  : TRoute extends `{${infer _Param}}`\n  ? [pathParam: string]\n  : TRoute extends `${infer _Prefix}:${infer Tail}`\n  ? RouteParams<`{${Tail}}`>\n  : [];\n"]}