import { Host, Session } from "@autorest/extension-base";
import { CodeModel } from "@autorest/codemodel";
import { PackageDetails } from "./models/packageDetails";
import { TracingInfo } from "./models/clientDetails";
export interface AutorestOptions {
    restLevelClient?: boolean;
    azureArm?: boolean;
    addCredentials?: boolean;
    credentialKeyHeaderName?: string;
    credentialScopes?: string[];
    srcPath: string;
    outputPath?: string;
    title?: string;
    packageDetails: PackageDetails;
    licenseHeader: boolean;
    tracingInfo?: TracingInfo;
    generateMetadata?: boolean;
    useCoreV2?: boolean;
    hideClients?: boolean;
    ignoreNullableOnOptional?: boolean;
    allowInsecureConnection?: boolean;
    disablePagingAsyncIterators?: boolean;
    skipEnumValidation?: boolean;
    azureOutputDirectory?: string;
    headAsBoolean?: boolean;
}
export declare function initializeSession(autorestHost: Host): Promise<void>;
export declare function getSession(): Session<CodeModel>;
export declare function getHost(): Host;
export declare function getAutorestOptions(): AutorestOptions;
//# sourceMappingURL=autorestSession.d.ts.map