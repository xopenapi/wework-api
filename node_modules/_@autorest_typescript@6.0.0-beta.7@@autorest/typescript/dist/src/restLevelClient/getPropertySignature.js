"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getPropertySignature = void 0;
const ts_morph_1 = require("ts-morph");
const languageHelpers_1 = require("../utils/languageHelpers");
const schemaHelpers_1 = require("./schemaHelpers");
/**
 * Builds a Typescript property or parameter signature
 * @param property - Property or parameter to get the Typescript signature for
 * @param importedModels - Set to track the models that need to be imported
 * @returns a PropertySignatureStructure for the property.
 */
function getPropertySignature(property, importedModels = new Set()) {
    const propertyLangMetadata = languageHelpers_1.getLanguageMetadata(property.language);
    const propertyName = `"${propertyLangMetadata.serializedName ||
        propertyLangMetadata.name}"`;
    const description = propertyLangMetadata.description;
    const type = schemaHelpers_1.getElementType(property.schema, importedModels);
    return Object.assign(Object.assign({ name: propertyName }, (description && { docs: [{ description }] })), { hasQuestionToken: !property.required, type, kind: ts_morph_1.StructureKind.PropertySignature });
}
exports.getPropertySignature = getPropertySignature;
//# sourceMappingURL=getPropertySignature.js.map