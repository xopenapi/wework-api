// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
import { __awaiter } from "tslib";
import { logger as coreLogger } from "../log";
import { Sanitizer } from "../util/sanitizer";
/**
 * The programmatic identifier of the logPolicy.
 */
export const logPolicyName = "logPolicy";
/**
 * A policy that logs all requests and responses.
 * @param options - Options to configure logPolicy.
 */
export function logPolicy(options = {}) {
    var _a;
    const logger = (_a = options.logger) !== null && _a !== void 0 ? _a : coreLogger.info;
    const sanitizer = new Sanitizer({
        additionalAllowedHeaderNames: options.additionalAllowedHeaderNames,
        additionalAllowedQueryParameters: options.additionalAllowedQueryParameters
    });
    return {
        name: logPolicyName,
        sendRequest(request, next) {
            return __awaiter(this, void 0, void 0, function* () {
                if (!logger.enabled) {
                    return next(request);
                }
                logger(`Request: ${sanitizer.sanitize(request)}`);
                const response = yield next(request);
                logger(`Response status code: ${response.status}`);
                logger(`Headers: ${sanitizer.sanitize(response.headers)}`);
                return response;
            });
        }
    };
}
//# sourceMappingURL=logPolicy.js.map