/// <reference types="node" />
import { Mapping, Message, RawSourceMap } from "./types";
export interface IAutoRestPluginInitiator {
    ReadFile(filename: string): Promise<string>;
    GetValue(key: string): Promise<any>;
    ListInputs(artifactType?: string): Promise<Array<string>>;
    ProtectFiles(path: string): Promise<void>;
    WriteFile(filename: string, content: string, sourceMap?: Array<Mapping> | RawSourceMap, artifactType?: string): void;
    Message(message: Message): void;
    UpdateConfigurationFile(filename: string, content: string): void;
    GetConfigurationFile(filename: string): Promise<string>;
}
export declare type AutoRestPluginHandler = (initiator: IAutoRestPluginInitiator) => Promise<void>;
export declare class AutoRestExtension {
    private readonly plugins;
    Add(name: string, handler: AutoRestPluginHandler): void;
    Run(input?: NodeJS.ReadableStream, output?: NodeJS.WritableStream): Promise<void>;
}
//# sourceMappingURL=extension-base.d.ts.map