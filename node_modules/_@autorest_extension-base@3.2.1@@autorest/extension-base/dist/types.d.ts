export declare type Position = {
    line: number;
    column: number;
} | {
    path?: JsonPath;
};
export declare type JsonPath = Array<string | number>;
export interface SourceLocation {
    document: string;
    Position: Position;
}
export interface Artifact {
    uri: string;
    type: string;
    content: string;
}
/**
 * The Channel that a message is registered with.
 */
export declare enum Channel {
    /** Information is considered the mildest of responses; not necesarily actionable. */
    Information,
    /** Warnings are considered important for best practices, but not catastrophic in nature. */
    Warning,
    /** Errors are considered blocking issues that block a successful operation.  */
    Error,
    /** Debug messages are designed for the developer to communicate internal autorest implementation details. */
    Debug,
    /** Verbose messages give the user additional clarity on the process. */
    Verbose,
    /** Catastrophic failure, likely abending the process.  */
    Fatal,
    /** Hint messages offer guidance or support without forcing action. */
    Hint,
    /** File represents a file output from an extension. Details are a Artifact and are required.  */
    File,
    /** content represents an update/creation of a configuration file. The final uri will be in the same folder as the primary config file. */
    Configuration,
    /** Protect is a path to not remove during a clear-output-folder.  */
    Protect
}
export interface Message {
    Channel: Channel;
    Key?: Iterable<string>;
    Details?: any;
    Text: string;
    Source?: Array<SourceLocation>;
}
export interface ArtifactMessage extends Message {
    Details: Artifact & {
        sourceMap?: Array<Mapping> | RawSourceMap;
    };
}
export interface RawSourceMap {
    file?: string;
    sourceRoot?: string;
    version: string;
    sources: Array<string>;
    names: Array<string>;
    sourcesContent?: Array<string>;
    mappings: string;
}
export interface Mapping {
    generated: Position;
    original: Position;
    source: string;
    name?: string;
}
//# sourceMappingURL=types.d.ts.map